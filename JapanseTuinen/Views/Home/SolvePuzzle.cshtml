@model JapanseTuinen.Models.SolvedPuzzleViewModel
@{
    ViewBag.Title = "SolvedPuzzle";
}

@if (Model == null)
{
    <span class="alert alert-danger">Hoezo probeerde gij een lege puzzel op te lossen?!</span>
}
else
{
    if (Model.ErrorList.Any())
    {
        foreach (var error in Model.ErrorList)
        {
            <span class="alert alert-danger">@error</span>
        }
    }

    <span class="alert alert-success">
        @String.Format("Checked {0} (out of {1}) solutions in: {2} seconds",
                                             Model.AmountOfCheckedSolutions, Model.AmountOfTotalSolutions, Math.Round(Model.SolveDuration.TotalSeconds, 2))
    </span>

    <span class="alert alert-warning">@String.Format("Found {0} solutions!", Model.AmountOfFoundSolutions)</span>

    foreach (var solution in Model.TileSet)
    {
        <div class="solved-solution-wrapper">
            @foreach (var tile in solution)
            {
                <div class="puzzle-field-wrapper">
                    <div id="@tile.PuzzleIndex" class="outer-puzzle-field @Model.GetRowClass(tile.PuzzleIndex) @Model.GetColumnClass(tile.PuzzleIndex)" data-row="@Model.GetRowNumberByIndex(tile.PuzzleIndex)" data-column="@Model.GetColumnNumberByIndex(tile.PuzzleIndex)">
                        <div class="inner-puzzle-field">
                            <img class="tile" src="@String.Format("/Images/tile{0}-{1}.jpg", tile.TileNumber, tile.Degrees)" />
                        </div>

                    </div>
                </div>
            }
        </div>
    }

    <h2>Geprobeerde combinaties (Totaal: @Model.TriedSolutions.Count):</h2>
    int counter = 0;
    @*foreach (var tried in Model.TriedSolutions)
    {
        counter++;
        <p>@tried</p>
        if (counter % 480 == 0 || counter % 20 == 0)
        {
            <p class="road-border-top"></p>
        }
    }*@
}